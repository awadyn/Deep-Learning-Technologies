#!/bin/bash

MALWARE_CLASS=$1

ASSEMBLY_TO_HEX="assembly_hex.txt"
ASSEMBLY="assembly.txt"

INPUT_DIR="malware_by_class/${MALWARE_CLASS}"

TEMP_FILE="temp_lang"
OUTPUT_FILE="temp_parsed_malwares/malware_lang_temp"
FINAL_OUTPUT_FILE="parsed_malwares/malware_lang_${MALWARE_CLASS}"

LOG_FILE="logs.txt"

# remove pre-existing log file
rm "${LOG_FILE}"
# remove pre-existing output files
rm "${OUTPUT_FILE}_"* 2>> "${LOG_FILE}"
# remove pre-existing final output file
rm "${FINAL_OUTPUT_FILE}" 2>> "${LOG_FILE}"

# loop over assembly code files
COUNTER=1
for file in "${INPUT_DIR}/"*.asm;
do
        
        # create output file
        cp "${file}" "${TEMP_FILE}_${COUNTER}"
        
        echo "parsing file ${file}..."
        # parse file...
        
        sed -i -e "s/.text[^ ]*//g; /;/ d; /.rdata/ d; $(sed 's:.*:s/&//g:' assembly_hex.txt)" "${TEMP_FILE}_${COUNTER}"
        sed -n "$(sed 's:.*:/& / p:' assembly.txt)" "${TEMP_FILE}_${COUNTER}"  >> "${OUTPUT_FILE}_${COUNTER}" 
        
        # clean up
        rm "${TEMP_FILE}_${COUNTER}" 2>> "${LOG_FILE}"

        # remove all leading and trailing white spaces and new lines #
        tr -d '\011\015' < "${OUTPUT_FILE}_${COUNTER}" > "${TEMP_FILE}_${COUNTER}"
        tr -s " " < "${TEMP_FILE}_${COUNTER}" > "${OUTPUT_FILE}_${COUNTER}"
        sed -i -e 's/^[ \t]*//;s/[ \t]*$//; s/, /./g; s/ /./g; s/eax/gpr/g; s/ebx/gpr/g; s/ecx/gpr/g; s/edx/gpr/g; s/edi/gpr/g; s/esi/gpr/g; s/\[.*\(ebp\).*\]/\1/; s/\[.*\(esp\).*\]/\1/; s/\[.*\(gpr\).*\]/\1/; s/call.*/call/g' "${OUTPUT_FILE}_${COUNTER}"

        cat "${OUTPUT_FILE}_${COUNTER}" >> "${FINAL_OUTPUT_FILE}"
        echo "finished parsing file ${file}..."

        # clean up
        rm "${TEMP_FILE}_${COUNTER}" 2>> "${LOG_FILE}"
        rm "${TEMP_FILE}_${COUNTER}-e" 2>> "${LOG_FILE}"
        rm "${OUTPUT_FILE}_${COUNTER}-e" 2>> "${LOG_FILE}"

        let COUNTER=COUNTER+1
done


