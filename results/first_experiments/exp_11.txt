## dataset 
##       50 malware assembly files from each class
## parsing
##       keeping only opcodes
## leave-one-out validation
##       choose random malware as test malware from parsed malwares
## preprocessing
##       considering only parsed malwares in the same range of word length as the test malware (+/- 1/3 of text file word length)
## word2vec model
##       vocabulary encompasses all train malwares and single test malware
##       skip window: gensim default
## distance measure
##       gensim's wmd


(TensorFlow) yass-MacBook-Pro:malwareTesting lanaawad$ python test_gensim.py parsed_test_malwares/malware_lang_2_32



parsed_test_malwares/malware_lang_2_32  -->  malware_lang_1_16  =  3.27306509185
parsed_test_malwares/malware_lang_2_32  -->  malware_lang_1_28  =  3.58221252019
parsed_test_malwares/malware_lang_2_32  -->  malware_lang_1_35  =  3.0028111697
parsed_test_malwares/malware_lang_2_32  -->  malware_lang_1_41  =  3.25103378051
parsed_test_malwares/malware_lang_2_32  -->  malware_lang_1_46  =  3.4454023334
average  =  3.31090497913

parsed_test_malwares/malware_lang_2_32  -->  malware_lang_2_41  =  1.58264160382
parsed_test_malwares/malware_lang_2_32  -->  malware_lang_2_42  =  2.88744986905
parsed_test_malwares/malware_lang_2_32  -->  malware_lang_2_47  =  1.97975022967
parsed_test_malwares/malware_lang_2_32  -->  malware_lang_2_49  =  2.14414111992
average  =  2.14849570561

average  =  -1

average  =  -1

average  =  -1

average  =  -1

average  =  -1

average  =  -1

average  =  -1

