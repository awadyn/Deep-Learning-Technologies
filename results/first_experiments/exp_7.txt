orFlow) yass-MacBook-Pro:malwareTesting lanaawad$ python test_gensim.py parsed_test_malwares/malware_lang_1_22




parsed_test_malwares/malware_lang_1_22  -->  malware_lang_1_10  =  0.869202972937
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_1_27  =  1.56809436064
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_1_28  =  0.973748472457
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_1_34  =  2.72097851336
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_1_39  =  0.745709769524
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_1_4  =  0.94194325318
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_1_47  =  0.894433833685
average  =  1.24487302511

parsed_test_malwares/malware_lang_1_22  -->  malware_lang_2_18  =  3.82073260886
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_2_25  =  4.16431055914
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_2_3  =  3.53345850388
parsed_test_malwares/malware_lang_1_22  -->  malware_lang_2_47  =  3.69302927014
average  =  3.8028827355

average  =  -1

average  =  -1

average  =  -1

average  =  -1

average  =  -1

average  =  -1

average  =  -1
# dataset 
##       50 malware assembly files from each class
## parsing
##       keeping only opcodes
## leave-one-out validation
##       choose random malware as test malware from parsed malwares
## preprocessing
##       considering only parsed malwares in the same range of word length as the test malware (+/- 1/3 of text file word length)
## word2vec model
##       vocabulary encompasses all train malwares and single test malware
##       skip window: gensim default
## distance measure
##       gensim's wmd



